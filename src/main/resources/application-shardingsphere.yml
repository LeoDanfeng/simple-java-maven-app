spring:
  datasource:
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:shading-auto-tables-algorithm.yaml
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://${MASTER_MYSQL}/${SHARDING_MYSQL_DB}?serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&useSSL=false
        username: admin
        password: admin
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://${SLAVE_MYSQL}/${SHARDING_MYSQL_DB}?serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&useSSL=false
        username: admin
        password: admin
    rules:
      readwrite-splitting:
        data-sources:
          ds:
            static-strategy:
              write-data-source-name: ds0
              read-data-source-names:
                - ds1
            load-balancer-name: alg-round
        load-balancers:
          alg-round:
            type: ROUND_ROBIN
      sharding:
        default-database-strategy:
          none:
        default-table-strategy:
          none:
        tables:
          t_sharding:
            actual-data-nodes: ds0.t_sharding$->{0..1}
            table-strategy:
                standard:
                    sharding-column: id
                    sharding-algorithm-name: t_sharding_algorithm
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
        sharding-algorithms:
          t_sharding_algorithm:
            type: INLINE
            props:
              algorithm-expression: t_sharding$->{id % 2}
        key-generators:
          snowflake:
            type: SNOWFLAKE
    props:
      sql-show: true
    mode:
      type: Standalone
      repository:
        type: JDBC